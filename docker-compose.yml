version: '3.7'

services:

    traefik:
        image: "traefik:v2.2"
        container_name: "traefik"
        command:
          #- "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--entrypoints.web.address=:80"
          - "--providers.docker.network=traefik"
        ports:
          - "80:80"
          - "50000:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks: 
            traefik:
            nextcloud_net:
            guacnetwork_compose:
            widow_net:
            elk:
            
    

    black_widow:
        build: './black_widow/'
        container_name: black_widow_dev
        hostname: black_widow_dev
        labels: 
            - "traefik.enable=true"
            - "traefik.http.routers.black_widow.entrypoints=web"
            - "traefik.http.routers.black_widow.rule=Host(`localhost`)"
        volumes:
            - type: volume
              source: black_widow_vol
              target: ${DESTINATION_APP}
        working_dir: ${DESTINATION_APP}
        command: /bin/bash -c "python3 MainServer.py"
        environment: 
            APP_ENV: "dev"
            APP_DEBUG: "False"
            APP_PORT: ${BW_APP_PORT}
            MONGODB_DATABASE: ${MONGODB_DATABASE}
            MONGODB_USERNAME: ${MONGODB_USERNAME}
            MONGODB_PASSWORD: ${MONGODB_PASSWORD}
            MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
        ports:
            - ${BW_CON_PORT}:${BW_APP_PORT}
        networks:
            traefik: 
            widow_net:
                ipv4_address: ${WIDOW_IP}
        stdin_open: true
        tty: true
    
    mongodb:
        build: './mongodb/'
        hostname: ${MONGODB_HOSTNAME}
        container_name: black_widowDB
        restart: always
        ports: 
            - ${MONGODB_PORT}-27019:${MONGODB_PORT}-27019

        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
            MONGODB_DATA_DIR: /data/db
            MONGODB_LOG_DIR: /dev/null
        volumes: 
            - type: volume
              source: mongodbdata
              target: /data/db
        
        networks: 
            widow_net:
                ipv4_address: ${MONGODB_IP}

    
    redis:
        build: './redis/'
        container_name: redis
        hostname: redis
        ports: 
            - ${REDIS_PORT}:${REDIS_PORT}
        networks: 
            widow_net:
                ipv4_address: ${REDIS_HOST}



    elasticsearch:
        image: elasticsearch:7.6.2
        volumes:
            - type: bind
              source: ./elasticsearch/config/elasticsearch.yml
              target: /usr/share/elasticsearch/config/elasticsearch.yml
              read_only: true
            - type: volume
              source: elasticsearch
              target: /usr/share/elasticsearch/data
        ports:
            - "9200"
            - "9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            ELASTIC_PASSWORD: changeme
            # Use single node discovery in order to disable production mode and avoid bootstrap checks
            # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            discovery.type: single-node
        networks:
            elk:
                ipv4_address: "172.20.168.3"
            
    
    logstash:
        image: logstash:7.6.2
        volumes:
            - type: bind
              source: ./logstash/config/logstash.yml
              target: /usr/share/logstash/config/logstash.yml
              read_only: true
            - type: bind
              source: ./logstash/pipeline
              target: /usr/share/logstash/pipeline
              read_only: true
        ports:
            - "5000/tcp"
            - "5000/udp"
            - "9600"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            elk:
                ipv4_address: "172.20.168.4"
        depends_on:
            - elasticsearch

    kibana:
        image: kibana:7.6.2
        volumes:
            - type: bind
              source: ./kibana/config/kibana.yml
              target: /usr/share/kibana/config/kibana.yml
              read_only: true
        container_name: kibana
        hostname: kibana
        labels: 
            - "traefik.enable=true"
            - "traefik.http.routers.kibana.entrypoints=web"
            - "traefik.http.routers.kibana.rule=Host(`kibana.localhost`)"
        ports:
            - "5601"
        networks:
            elk:
                ipv4_address: "172.20.168.2"
            
            
        depends_on:
            - elasticsearch
                
    nextcloud:
        image: nextcloud
        container_name: nextcloud
        hostname: nextcloud
        labels: 
            - "traefik.enable=true"
            - "traefik.http.routers.nextcloud.entrypoints=web"
            - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.localhost`)"
           
        #ports: 
        #    - 8081:80
        volumes:
            - nextcloud:/var/www/html
        environment: 
            - POSTGRES_HOST=nextcloud_db
            - POSTGRES_DB=files
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=password
            - NEXTCLOUD_ADMIN_PASSWORD=password
            - NEXTCLOUD_ADMIN_USER=admin
            - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.localhost
    
        depends_on:
            - nextcloud_db

        networks: 
            traefik:
            nextcloud_net:
                ipv4_address: "172.19.128.4"
    
    nextcloud_db:
        image: postgres
        restart: always
        hostname: nextcloud_db
        container_name: nextcloud_db
        volumes:
        - nextcloud_db:/var/lib/postgresql/data
        environment:
        - POSTGRES_DB=files
        - POSTGRES_USER=user
        - POSTGRES_PASSWORD=password
        - POSTGRES_HOST=nextcloud_db
        #########
        #secrets:
        #- postgres_db
        #- postgres_password
        #- postgres_user
        networks: 
            nextcloud_net:
                ipv4_address: "172.19.128.5"
    # guacd
    guacd:
        container_name: guacd_compose
        image: guacamole/guacd:1.0.0
        networks:
            guacnetwork_compose:
        #restart: always
        volumes:
            - ./drive:/drive:rw
            - ./record:/record:rw
    # postgres
    postgres:
        container_name: postgres_guacamole_compose
        environment:
            PGDATA: /var/lib/postgresql/data/guacamole
            POSTGRES_DB: guacamole_db
            POSTGRES_PASSWORD: ChooseYourOwnPasswordHere1234
            POSTGRES_USER: guacuser
        image: postgres
        networks:
            guacnetwork_compose:
        #restart: always
        volumes:
            - ./init:/docker-entrypoint-initdb.d:ro
            - ./data:/var/lib/postgresql/data:rw

    # guacamole
    guacamole:
        container_name: guacamole_compose
        labels: 
            - "traefik.enable=true"
            - "traefik.http.routers.guacamole.entrypoints=web"
            - "traefik.http.routers.guacamole.rule=Host(`guac.localhost`)"
            - "traefik.http.routers.guacamole.rule=PathPrefix(`/guacamole`)"
        depends_on:
            - guacd
            - postgres
        environment:
            GUACD_HOSTNAME: guacd
            POSTGRES_DATABASE: guacamole_db
            POSTGRES_HOSTNAME: postgres
            POSTGRES_PASSWORD: ChooseYourOwnPasswordHere1234
            POSTGRES_USER: guacuser
        image: guacamole/guacamole:1.0.0
        #links:
        #    - guacd
        networks:
            guacnetwork_compose:
            traefik:
        ports:
            - 8085:8080/tcp

           
volumes:
    black_widow_vol:

        driver: local
        driver_opts: 
            type: none
            device: ${LOCAL_APP_PATH}
            o: 'bind'

    mongodbdata:
        driver: local


    nextcloud:
    nextcloud_db:

    elasticsearch: 


networks:
    traefik:
    widow_net:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${SUBNET_WIDOW}/24
    
    elk:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.20.168.0/24
                


    nextcloud_net:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${SUBNET_NEXTCLOUD}/24
    
    guacnetwork_compose:
        driver: bridge


            
        
